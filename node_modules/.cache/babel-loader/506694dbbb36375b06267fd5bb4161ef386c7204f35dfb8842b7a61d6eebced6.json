{"ast":null,"code":"var _jsxFileName = \"/home/muaaz/Frontend-Task/src/components/formComponent/FormComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport \"./styles.css\";\nimport InputField from \"../inputField/InputField\";\nimport SelectField from \"../selectField/SelectField\";\nimport { useGetFilmsMutation } from \"../../redux/filmApi\";\nimport { object, string } from \"yup\";\nimport Loader from \"react-js-loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormComponent = () => {\n  _s();\n  var _films$;\n  const [films, setFilms] = useState(null);\n  const [getFilms] = useGetFilmsMutation();\n  const [errors, setErrors] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n  const filmSchema = object({\n    firstName: string().trim().required(\"You need to enter a first name\"),\n    lastName: string().trim().required(\"You need to enter a last name\"),\n    favoriteMovie: string().required(\"You need to select a movie\")\n  });\n  const getFilmNames = async () => {\n    const {\n      data: {\n        data: {\n          allFilms: {\n            films\n          }\n        }\n      }\n    } = await getFilms();\n    setFilms(films);\n  };\n  useEffect(() => {\n    getFilmNames();\n  }, []);\n  const handleFormSubmit = async values => {\n    try {\n      filmSchema.validateSync(values, {\n        abortEarly: false\n      });\n      setSubmitted(true);\n    } catch (error) {\n      setErrors(error.errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"My form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"submit-txt\",\n        children: \"Thanks for submitting the form!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"My form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: errors && errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-txt\",\n          children: error\n        }, error + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), films ? /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: \"\",\n          lastName: \"\",\n          favoriteMovie: (_films$ = films[0]) === null || _films$ === void 0 ? void 0 : _films$.title\n        },\n        onSubmit: handleFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form\",\n          onChange: () => setErrors([]),\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            fieldName: \"First Name\",\n            htmlName: \"firstName\",\n            error: errors.some(error => error.includes(\"first name\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            fieldName: \"Last Name\",\n            htmlName: \"lastName\",\n            error: errors.some(error => error.includes(\"last name\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            fieldName: \"Favorite Star Wars movie\",\n            htmlName: \"favoriteMovie\",\n            data: films\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"spinner-default\",\n        bgColor: \"#00B3FF\",\n        color: \"#00B3FF\",\n        size: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(FormComponent, \"r+V+mZY3O1QSUHMap/OSHVQQpKQ=\", false, function () {\n  return [useGetFilmsMutation];\n});\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useEffect","useState","Formik","Form","InputField","SelectField","useGetFilmsMutation","object","string","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","FormComponent","_s","_films$","films","setFilms","getFilms","errors","setErrors","submitted","setSubmitted","filmSchema","firstName","trim","required","lastName","favoriteMovie","getFilmNames","data","allFilms","handleFormSubmit","values","validateSync","abortEarly","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","initialValues","title","onSubmit","onChange","fieldName","htmlName","some","includes","type","bgColor","color","size","_c","$RefreshReg$"],"sources":["/home/muaaz/Frontend-Task/src/components/formComponent/FormComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport \"./styles.css\";\nimport InputField from \"../inputField/InputField\";\nimport SelectField from \"../selectField/SelectField\";\nimport { useGetFilmsMutation } from \"../../redux/filmApi\";\nimport { object, string } from \"yup\";\nimport Loader from \"react-js-loader\";\n\nconst FormComponent = () => {\n  const [films, setFilms] = useState(null);\n  const [getFilms] = useGetFilmsMutation();\n  const [errors, setErrors] = useState([]);\n  const [submitted, setSubmitted] = useState(false);\n\n  const filmSchema = object({\n    firstName: string().trim().required(\"You need to enter a first name\"),\n    lastName: string().trim().required(\"You need to enter a last name\"),\n    favoriteMovie: string().required(\"You need to select a movie\"),\n  });\n\n  const getFilmNames = async () => {\n    const {\n      data: {\n        data: {\n          allFilms: { films },\n        },\n      },\n    } = await getFilms();\n    setFilms(films);\n  };\n\n  useEffect(() => {\n    getFilmNames();\n  }, []);\n\n  const handleFormSubmit = async (values) => {\n    try {\n      filmSchema.validateSync(values, { abortEarly: false });\n      setSubmitted(true);\n    } catch (error) {\n      setErrors(error.errors);\n    }\n  };\n\n  return (\n    <>\n      {submitted ? (\n        <div className=\"submit-container\">\n          <h3 className=\"title\">My form</h3>\n          <h3 className=\"submit-txt\">Thanks for submitting the form!</h3>\n        </div>\n      ) : (\n        <div className=\"form-container\">\n          <h3 className=\"title\">My form</h3>\n          <div className=\"error-container\">\n            {errors &&\n              errors.map((error, index) => (\n                <p key={error + index} className=\"error-txt\">\n                  {error}\n                </p>\n              ))}\n          </div>\n          {films ? (\n            <Formik\n              initialValues={{\n                firstName: \"\",\n                lastName: \"\",\n                favoriteMovie: films[0]?.title,\n              }}\n              onSubmit={handleFormSubmit}\n            >\n              <Form className=\"form\" onChange={() => setErrors([])}>\n                <InputField\n                  fieldName={\"First Name\"}\n                  htmlName={\"firstName\"}\n                  error={errors.some((error) => error.includes(\"first name\"))}\n                />\n                <InputField\n                  fieldName={\"Last Name\"}\n                  htmlName={\"lastName\"}\n                  error={errors.some((error) => error.includes(\"last name\"))}\n                />\n\n                <SelectField\n                  fieldName={\"Favorite Star Wars movie\"}\n                  htmlName={\"favoriteMovie\"}\n                  data={films}\n                />\n                <button type=\"submit\" className=\"submit-button\">\n                  Submit\n                </button>\n              </Form>\n            </Formik>\n          ) : (\n            <Loader\n              type=\"spinner-default\"\n              bgColor={\"#00B3FF\"}\n              color={\"#00B3FF\"}\n              size={60}\n            />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default FormComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}