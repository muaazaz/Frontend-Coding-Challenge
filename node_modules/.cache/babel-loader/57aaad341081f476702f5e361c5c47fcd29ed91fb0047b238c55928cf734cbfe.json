{"ast":null,"code":"var _jsxFileName = \"/home/muaaz/Frontend-Task/src/components/formComponent/FormComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport \"./styles.css\";\nimport InputField from \"../inputField/InputField\";\nimport SelectField from \"../selectField/SelectField\";\nimport { useGetFilmsMutation } from \"../../redux/filmApi\";\nimport { object, string } from \"yup\";\nimport Loader from \"react-js-loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent = () => {\n  _s();\n  var _films$;\n  const [films, setFilms] = useState(null);\n  const [getFilms] = useGetFilmsMutation();\n  const [errors, setErrors] = useState([]);\n  const filmSchema = object({\n    firstName: string().trim().required(\"You need to enter a first name\"),\n    lastName: string().trim().required(\"You need to enter a last name\"),\n    favoriteMovie: string().required(\"You need to select a movie\")\n  });\n  const getFilmNames = async () => {\n    const {\n      data: {\n        data: {\n          allFilms: {\n            films\n          }\n        }\n      }\n    } = await getFilms();\n    setFilms(films);\n  };\n  useEffect(() => {\n    getFilmNames();\n  }, []);\n  const handleFormSubmit = async values => {\n    try {\n      filmSchema.validateSync(values, {\n        abortEarly: false\n      });\n    } catch (error) {\n      setErrors(error.errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: \"My form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: errors && errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-txt\",\n        children: error\n      }, error + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), films ? /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: \"\",\n        lastName: \"\",\n        favoriteMovie: (_films$ = films[0]) === null || _films$ === void 0 ? void 0 : _films$.title\n      },\n      onSubmit: handleFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        onChange: () => setErrors([]),\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          fieldName: \"First Name\",\n          htmlName: \"firstName\",\n          error: errors.some(error => error.includes(\"first name\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          fieldName: \"Last Name\",\n          htmlName: \"lastName\",\n          error: errors.some(error => error.includes(\"last name\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          fieldName: \"Favorite Star Wars movie\",\n          htmlName: \"favoriteMovie\",\n          data: films\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"spinner-default\",\n      bgColor: \"#00B3FF\",\n      color: \"#00B3FF\",\n      size: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(FormComponent, \"IL5sUbUxADH8G5aBdbTu8ojGkS4=\", false, function () {\n  return [useGetFilmsMutation];\n});\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useEffect","useState","Formik","Form","InputField","SelectField","useGetFilmsMutation","object","string","Loader","jsxDEV","_jsxDEV","FormComponent","_s","_films$","films","setFilms","getFilms","errors","setErrors","filmSchema","firstName","trim","required","lastName","favoriteMovie","getFilmNames","data","allFilms","handleFormSubmit","values","validateSync","abortEarly","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","initialValues","title","onSubmit","onChange","fieldName","htmlName","some","includes","type","bgColor","color","size","_c","$RefreshReg$"],"sources":["/home/muaaz/Frontend-Task/src/components/formComponent/FormComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport \"./styles.css\";\nimport InputField from \"../inputField/InputField\";\nimport SelectField from \"../selectField/SelectField\";\nimport { useGetFilmsMutation } from \"../../redux/filmApi\";\nimport { object, string } from \"yup\";\nimport Loader from \"react-js-loader\";\n\nconst FormComponent = () => {\n  const [films, setFilms] = useState(null);\n  const [getFilms] = useGetFilmsMutation();\n  const [errors, setErrors] = useState([]);\n  const filmSchema = object({\n    firstName: string().trim().required(\"You need to enter a first name\"),\n    lastName: string().trim().required(\"You need to enter a last name\"),\n    favoriteMovie: string().required(\"You need to select a movie\"),\n  });\n\n  const getFilmNames = async () => {\n    const {\n      data: {\n        data: {\n          allFilms: { films },\n        },\n      },\n    } = await getFilms();\n    setFilms(films);\n  };\n\n  useEffect(() => {\n    getFilmNames();\n  }, []);\n\n  const handleFormSubmit = async (values) => {\n    try {\n      filmSchema.validateSync(values, { abortEarly: false });\n    } catch (error) {\n      setErrors(error.errors);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h3 className=\"title\">My form</h3>\n      <div className=\"error-container\">\n        {errors &&\n          errors.map((error, index) => (\n            <p key={error + index} className=\"error-txt\">\n              {error}\n            </p>\n          ))}\n      </div>\n      {films ? (\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            favoriteMovie: films[0]?.title,\n          }}\n          onSubmit={handleFormSubmit}\n        >\n          <Form className=\"form\" onChange={() => setErrors([])}>\n            <InputField\n              fieldName={\"First Name\"}\n              htmlName={\"firstName\"}\n              error={errors.some((error) => error.includes(\"first name\"))}\n            />\n            <InputField\n              fieldName={\"Last Name\"}\n              htmlName={\"lastName\"}\n              error={errors.some((error) => error.includes(\"last name\"))}\n            />\n\n            <SelectField\n              fieldName={\"Favorite Star Wars movie\"}\n              htmlName={\"favoriteMovie\"}\n              data={films}\n            />\n            <button type=\"submit\" className=\"submit-button\">\n              Submit\n            </button>\n          </Form>\n        </Formik>\n      ) : (\n        <Loader\n          type=\"spinner-default\"\n          bgColor={\"#00B3FF\"}\n          color={\"#00B3FF\"}\n          size={60}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FormComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,QAAQ;AACrC,OAAO,cAAc;AACrB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,MAAM,EAAEC,MAAM,QAAQ,KAAK;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,OAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,QAAQ,CAAC,GAAGX,mBAAmB,CAAC,CAAC;EACxC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMmB,UAAU,GAAGb,MAAM,CAAC;IACxBc,SAAS,EAAEb,MAAM,CAAC,CAAC,CAACc,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,gCAAgC,CAAC;IACrEC,QAAQ,EAAEhB,MAAM,CAAC,CAAC,CAACc,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,+BAA+B,CAAC;IACnEE,aAAa,EAAEjB,MAAM,CAAC,CAAC,CAACe,QAAQ,CAAC,4BAA4B;EAC/D,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MACJC,IAAI,EAAE;QACJA,IAAI,EAAE;UACJC,QAAQ,EAAE;YAAEb;UAAM;QACpB;MACF;IACF,CAAC,GAAG,MAAME,QAAQ,CAAC,CAAC;IACpBD,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd0B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACFV,UAAU,CAACW,YAAY,CAACD,MAAM,EAAE;QAAEE,UAAU,EAAE;MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdd,SAAS,CAACc,KAAK,CAACf,MAAM,CAAC;IACzB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAIuB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC5B,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BjB,MAAM,IACLA,MAAM,CAACsB,GAAG,CAAC,CAACP,KAAK,EAAEQ,KAAK,kBACtB9B,OAAA;QAAuBuB,SAAS,EAAC,WAAW;QAAAC,QAAA,EACzCF;MAAK,GADAA,KAAK,GAAGQ,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACLxB,KAAK,gBACJJ,OAAA,CAACT,MAAM;MACLwC,aAAa,EAAE;QACbrB,SAAS,EAAE,EAAE;QACbG,QAAQ,EAAE,EAAE;QACZC,aAAa,GAAAX,OAAA,GAAEC,KAAK,CAAC,CAAC,CAAC,cAAAD,OAAA,uBAARA,OAAA,CAAU6B;MAC3B,CAAE;MACFC,QAAQ,EAAEf,gBAAiB;MAAAM,QAAA,eAE3BxB,OAAA,CAACR,IAAI;QAAC+B,SAAS,EAAC,MAAM;QAACW,QAAQ,EAAEA,CAAA,KAAM1B,SAAS,CAAC,EAAE,CAAE;QAAAgB,QAAA,gBACnDxB,OAAA,CAACP,UAAU;UACT0C,SAAS,EAAE,YAAa;UACxBC,QAAQ,EAAE,WAAY;UACtBd,KAAK,EAAEf,MAAM,CAAC8B,IAAI,CAAEf,KAAK,IAAKA,KAAK,CAACgB,QAAQ,CAAC,YAAY,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACF5B,OAAA,CAACP,UAAU;UACT0C,SAAS,EAAE,WAAY;UACvBC,QAAQ,EAAE,UAAW;UACrBd,KAAK,EAAEf,MAAM,CAAC8B,IAAI,CAAEf,KAAK,IAAKA,KAAK,CAACgB,QAAQ,CAAC,WAAW,CAAC;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eAEF5B,OAAA,CAACN,WAAW;UACVyC,SAAS,EAAE,0BAA2B;UACtCC,QAAQ,EAAE,eAAgB;UAC1BpB,IAAI,EAAEZ;QAAM;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACF5B,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAAChB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAET5B,OAAA,CAACF,MAAM;MACLyC,IAAI,EAAC,iBAAiB;MACtBC,OAAO,EAAE,SAAU;MACnBC,KAAK,EAAE,SAAU;MACjBC,IAAI,EAAE;IAAG;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CArFID,aAAa;EAAA,QAEEN,mBAAmB;AAAA;AAAAgD,EAAA,GAFlC1C,aAAa;AAuFnB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}